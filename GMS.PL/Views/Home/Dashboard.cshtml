@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section style="height: calc(100vh - 81px)">
	<div class="bg-primary landing bg-gradient text-white py-5 shadow-lg mb-5 animate-fade-in-up p-4">
		<div class="row align-items-center">
			<div class="col-md-8">
				<h1 class="display-5 fw-bold text-gradient-primary">
					<i class="fas fa-tachometer-alt me-2"></i>Dashboard
				</h1>
				<p class="lead text-light">Welcome back, <strong>@ViewBag.UserName</strong>! 👋 Here's your system overview.</p>
			</div>
			<div class="col-md-4 text-end">
				<span class="badge badge-lg bg-gradient-primary shadow-enhanced">
					<i class="fas fa-user-circle me-1"></i>@ViewBag.UserRole
				</span>
			</div>
		</div>
        <div class="row g-4 my-2">
            <div class="col-lg-3 col-md-6 animate-fade-in-up">
                <div class="stats-card border-radius-lg h-100">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="dashboard-icon">
                                    <i class="fas fa-book"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <h2 class="stats-number">@ViewBag.TotalCourses</h2>
                                <p class="text-muted mb-0 fw-bold">Total Courses</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-0 p-4 pt-0">
                        <a href="@Url.Action("Index", "Courses")" class="btn btn-gradient-primary btn-sm shadow-enhanced">
                            <i class="fas fa-eye me-1"></i>View Courses
                        </a>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 animate-fade-in-up">
                <div class="stats-card border-radius-lg h-100">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="dashboard-icon" style="background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);">
                                    <i class="fas fa-calendar-alt"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <h2 class="stats-number text-success">@ViewBag.TotalSessions</h2>
                                <p class="text-muted mb-0 fw-bold">Active Sessions</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-0 p-4 pt-0">
                        <a href="@Url.Action("Index", "Sessions")" class="btn btn-gradient-success btn-sm shadow-enhanced">
                            <i class="fas fa-eye me-1"></i>View Sessions
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 animate-fade-in-up">
                <div class="stats-card border-radius-lg h-100">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="dashboard-icon" style="background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);">
                                    <i class="fas fa-users"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <h2 class="stats-number text-info">@ViewBag.TotalUsers</h2>
                                <p class="text-muted mb-0 fw-bold">Total Users</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-0 p-4 pt-0">
                        @if (ViewBag.UserRole == "Admin" || ViewBag.UserRole == "SuperAdmin")
                        {
                            <a href="@Url.Action("ManageUsers", "Account")" class="btn btn-gradient-warning btn-sm shadow-enhanced">
                                <i class="fas fa-users-cog me-1"></i>Manage Users
                            </a>

                        }
                        else
                        {
                            <a href="@Url.Action("Index", "Users")" class="btn btn-outline-info btn-sm">
                                <i class="fas fa-eye me-1"></i>View Users
                            </a>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 animate-fade-in-up">
                <div class="stats-card border-radius-lg h-100">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <div class="dashboard-icon" style="background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);">
                                    <i class="fas fa-chart-line"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <h2 class="stats-number text-warning">@ViewBag.TotalGrades</h2>
                                <p class="text-muted mb-0 fw-bold">Total Grades</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-0 p-4 pt-0">
                        <a href="@Url.Action("Index", "Grades")" class="btn btn-gradient-warning btn-sm shadow-enhanced">
                            <i class="fas fa-eye me-1"></i>View Grades
                        </a>
                    </div>
                </div>
            </div>
        </div>
	</div>
</section>
<div class="row g-4 my-5">
    <div>
        <div class="card card-enhanced animate-fade-in-up">
            <div class="card-header">
                <h5 class="mb-0 text-white">
                    <i class="fas fa-info-circle me-2"></i>System Information
                </h5>
            </div>
            <div class="card-body p-4">
                <div class="info-item mb-4">
                    <div class="d-flex align-items-center mb-2">
                        <div class="info-icon">
                            <i class="fas fa-code-branch text-primary"></i>
                        </div>
                        <div class="ms-3">
                            <small class="text-muted">Platform Version</small>
                            <div class="fw-bold">Training Management System v2.1.0</div>
                        </div>
                    </div>
                </div>

                <div class="info-item mb-4">
                    <div class="d-flex align-items-center mb-2">
                        <div class="info-icon">
                            <i class="fas fa-user-shield text-success"></i>
                        </div>
                        <div class="ms-3">
                            <small class="text-muted">Your Role</small>
                            <div class="fw-bold">
                                <span class="badge text-success bg-gradient-primary">@ViewBag.UserRole</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="info-item mb-4">
                    <div class="d-flex align-items-center mb-2">
                        <div class="info-icon">
                            <i class="fas fa-clock text-warning"></i>
                        </div>
                        <div class="ms-3">
                            <small class="text-muted">Last Login</small>
                            <div class="fw-bold">@DateTime.Now.ToString("MMM dd, yyyy")</div>
                            <small class="text-muted">@DateTime.Now.ToString("hh:mm tt")</small>
                        </div>
                    </div>
                </div>

                <div class="info-item mb-4">
                    <div class="d-flex align-items-center mb-2">
                        <div class="info-icon">
                            <i class="fas fa-server text-info"></i>
                        </div>
                        <div class="ms-3">
                            <small class="text-muted">System Status</small>
                            <div class="fw-bold text-success">
                                <i class="fas fa-circle text-success me-1" style="font-size: 0.5rem;"></i>
                                Online & Active
                            </div>
                        </div>
                    </div>
                </div>

                <hr class="my-3">
                <div class="d-flex justify-content-between align-items-center gap-2">
                    <a href="@Url.Action("Profile", "Account")" class="btn btn-gradient-primary shadow-enhanced">
                        <i class="fas fa-user me-2"></i>View Profile
                    </a>
                    <a href="@Url.Action("ChangePassword", "Account")" class="btn btn-outline-secondary">
                        <i class="fas fa-key me-2"></i>Change Password
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Enhanced Dashboard Styles */
    .dashboard-header {
        padding: 3rem 2rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 20px;
        margin: -1rem -1rem 3rem -1rem;
        color: white;
        position: relative;
        overflow: hidden;
    }

        .dashboard-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 200px;
            height: 200px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            transform: translate(50px, -50px);
        }

        .dashboard-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 50%;
            transform: translate(-50px, 50px);
        }

        .dashboard-header h1 {
            color: white !important;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .dashboard-header .lead {
            color: rgba(255, 255, 255, 0.9) !important;
        }

    /* Enhanced Stats Cards */
    .stats-card {
        background: white;
        border-radius: 20px;
        padding: 0;
        border: none;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
        position: relative;
        overflow: hidden;
    }

        .stats-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #007bff, #0056b3);
        }

        .stats-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .stats-card:nth-child(2)::before {
            background: linear-gradient(90deg, #28a745, #1e7e34);
        }

        .stats-card:nth-child(3)::before {
            background: linear-gradient(90deg, #17a2b8, #138496);
        }

        .stats-card:nth-child(4)::before {
            background: linear-gradient(90deg, #ffc107, #e0a800);
        }

    /* Enhanced Dashboard Icons */
    .dashboard-icon {
        width: 70px;
        height: 70px;
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.8rem;
        color: white;
        margin-bottom: 0;
        box-shadow: 0 8px 25px rgba(0, 123, 255, 0.3);
        transition: all 0.3s ease;
    }

        .dashboard-icon:hover {
            transform: rotate(10deg) scale(1.1);
            box-shadow: 0 12px 35px rgba(0, 123, 255, 0.4);
        }

    /* Stats Numbers Animation */
    .stats-number {
        font-size: 2.5rem;
        font-weight: 800;
        margin-bottom: 0;
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        line-height: 1;
    }

    /* Enhanced Card Headers */
    .card-enhanced .card-header {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        border: none;
        padding: 1.5rem 2rem;
        border-radius: 20px 20px 0 0;
    }

    .card-enhanced .card-body {
        padding: 2rem;
    }

    /* Info Items Styling */
    .info-item {
        padding: 1rem;
        border-radius: 15px;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        transition: all 0.3s ease;
    }

        .info-item:hover {
            transform: translateX(5px);
            background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);
        }

    .info-icon {
        width: 45px;
        height: 45px;
        background: rgba(255, 255, 255, 0.9);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    /* Enhanced Button Animations */
    .btn {
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        border-radius: 12px;
        font-weight: 600;
        padding: 0.75rem 1.5rem;
    }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

    /* Gradient Button Hover Effects */
    .btn-gradient-primary:hover {
        background: linear-gradient(135deg, #0056b3 0%, #004085 100%);
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(0, 123, 255, 0.4);
	    color: #fff;
    }

    .btn-gradient-success:hover {
        background: linear-gradient(135deg, #1e7e34 0%, #155724 100%);
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(40, 167, 69, 0.4);
	    color: #fff;
    }

    .btn-gradient-warning:hover {
        background: linear-gradient(135deg, #e0a800 0%, #d39e00 100%);
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(255, 193, 7, 0.4);
	    color: #fff;
    }

    .btn-gradient-danger:hover {
        background: linear-gradient(135deg, #c82333 0%, #a71e2a 100%);
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(220, 53, 69, 0.4);
	    color: #fff;
    }

    /* Badge Enhancements */
    .badge-lg {
        font-size: 1.1rem;
        padding: 0.75rem 1.5rem;
        border-radius: 25px;
        font-weight: 600;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }
    }

    /* Responsive Improvements */
    @@media (max-width: 768px) {
        .dashboard-header {
            padding: 2rem 1rem;
            margin: -1rem 0 2rem 0;
        }

        .stats-number {
            font-size: 2rem;
        }

        .dashboard-icon {
            width: 60px;
            height: 60px;
            font-size: 1.5rem;
        }

        .card-enhanced .card-body {
            padding: 1.5rem;
        }
    }

    /* Loading Animation for Stats */
    .stats-card.loading .stats-number {
        animation: countUp 2s ease-out;
    }

    @@keyframes countUp {
        0% {
            opacity: 0;
            transform: translateY(20px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Custom Scrollbar for Info Section */
    .card-enhanced .card-body::-webkit-scrollbar {
        width: 6px;
    }

    .card-enhanced .card-body::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .card-enhanced .card-body::-webkit-scrollbar-thumb {
        background: linear-gradient(135deg, #007bff, #0056b3);
        border-radius: 10px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add loading animation to stats cards
        const statsCards = document.querySelectorAll('.stats-card');
        statsCards.forEach((card, index) => {
            setTimeout(() => {
                card.classList.add('loading');
            }, index * 200);
        });

        // Animate numbers counting up
        const statsNumbers = document.querySelectorAll('.stats-number');
        statsNumbers.forEach(number => {
            const finalValue = parseInt(number.textContent) || 0;
            let currentValue = 0;
            const increment = finalValue / 50;
            const timer = setInterval(() => {
                currentValue += increment;
                if (currentValue >= finalValue) {
                    number.textContent = finalValue;
                    clearInterval(timer);
                } else {
                    number.textContent = Math.floor(currentValue);
                }
            }, 40);
        });

        // Add hover effects to quick action buttons
        const actionButtons = document.querySelectorAll('.btn-gradient-primary, .btn-gradient-success, .btn-gradient-warning, .btn-gradient-danger');
        actionButtons.forEach(button => {
            button.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-3px) scale(1.02)';
            });

            button.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });

        // Add click ripple effect
        actionButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                const ripple = document.createElement('span');
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                const x = e.clientX - rect.left - size / 2;
                const y = e.clientY - rect.top - size / 2;

                ripple.style.width = ripple.style.height = size + 'px';
                ripple.style.left = x + 'px';
                ripple.style.top = y + 'px';
                ripple.classList.add('ripple');

                this.appendChild(ripple);

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });

        // Add pulse animation to role badge
        const roleBadge = document.querySelector('.badge-lg');
        if (roleBadge) {
            setInterval(() => {
                roleBadge.style.animation = 'none';
                setTimeout(() => {
                    roleBadge.style.animation = 'pulse 2s infinite';
                }, 10);
            }, 5000);
        }

        // Add smooth scroll for any anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Add real-time clock update
        function updateClock() {
            const now = new Date();
            const timeElements = document.querySelectorAll('.real-time-clock');
            timeElements.forEach(element => {
                element.textContent = now.toLocaleTimeString();
            });
        }

        setInterval(updateClock, 1000);
        updateClock(); // Initial call
    });
</script>

@section Scripts {
    <style>
        .ripple {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            transform: scale(0);
            animation: ripple-animation 0.6s linear;
            pointer-events: none;
        }

        @@keyframes ripple-animation {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    </style>
}
